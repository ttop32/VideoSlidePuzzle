{"remainingRequest":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\src\\components\\SlidePuzzleContainer.vue?vue&type=template&id=6219333c&scoped=true","dependencies":[{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\src\\components\\SlidePuzzleContainer.vue","mtime":1623571174090},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1616796459000},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\tsop3\\gitrepos\\VideoSlidePuzzle\\src\\components\\SlidePuzzleContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button @click=\"randomSlide(500)\">\r\n        <ion-icon slot=\"icon-only\" :icon=\"refresh\"></ion-icon>\r\n      </ion-button>\r\n\r\n      <ion-button @click=\"$refs.sizeOptionList.$el.open()\">\r\n        <ion-icon slot=\"icon-only\" :icon=\"expand\"></ion-icon>\r\n        <ion-datetime ref=\"sizeOptionList\" @ionChange=\"changeSizeUsingDate\" display-format=\"YY\" :value=\"1900+puzzleSize\" min=\"1903\" max=\"1910\" style=\"display: none;\"> </ion-datetime>\r\n      </ion-button>\r\n\r\n      <ion-button @click=\"$refs.inputfile.click()\">\r\n        <ion-icon slot=\"icon-only\" :icon=\"folderOpenOutline\"></ion-icon>\r\n        <input ref=\"inputfile\" type=\"file\" accept=\"video/*,image/*\" name=\"image\" id=\"file\" @change=\"loadFile\" />\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title mode=ios>{{timerTime}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n\r\n<ion-content>\r\n  <img v-if=\"isImage\" class=\"sourceImg\" ref=\"sourceImg\" :src=\"src\" @load=\"onMediaLoad\" >\r\n  <video v-else class=\"sourceImg\" ref=\"sourceImg\" autoplay=\"autoplay\" loop=\"loop\" playsinline=\"\" :src=\"src\" width=\"500\" height=\"500\" @play=\"onMediaLoad\" crossOrigin=\"anonymous\">\r\n  </video>\r\n  <div id=\"layout\">\r\n    <transition-group name=\"slide\" class=\"puzzleContainer\" tag=\"span\" :style=\"{'width': containerSize + 'px'}\">\r\n      <div v-for=\"tile in tiles\" class=\"tile\" :key=\"tile.index\" :style=\"{\r\n                  width: `${tileWidthPercent}%`,\r\n                  height: `${tileHeightPercent}%`,\r\n                  opacity: tile.position === openPos ? 0 : 1\r\n                  }\">\r\n        <canvas :ref=\"el => { if (el) tileCanvasList[tile.index]=el }\" class=\"tile_canvas\" @mouseup.prevent=\"move(tile.position)\" @touchend.prevent=\"move(tile.position)\" @click.prevent @mousedown.prevent :width=\"tileWidth\" :height=\"tileHeight\">\r\n        </canvas>\r\n      </div>\r\n    </transition-group>\r\n\r\n\r\n    <canvas class=\"background\" ref=\"background\"> </canvas>\r\n\r\n\r\n  </div>\r\n</ion-content>\r\n</template>\r\n<script>\r\nimport range from 'python-range';\r\nimport shuffle from 'shuffle-array';\r\nimport {\r\n  refresh,\r\n  expand,\r\n  folderOpenOutline\r\n} from 'ionicons/icons';\r\nimport {\r\n  IonButtons,\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonDatetime,\r\n  IonIcon,\r\n} from '@ionic/vue';\r\n\r\n\r\nexport default {\r\n  name: 'SlidePuzzleContainer',\r\n  props: {\r\n    name: String,\r\n  },\r\n  components: {\r\n    IonButtons,\r\n    IonButton,\r\n    IonContent,\r\n    IonHeader,\r\n    IonTitle,\r\n    IonToolbar,\r\n    IonDatetime,\r\n    IonIcon,\r\n  },\r\n  setup() {\r\n    return {\r\n      refresh,\r\n      expand,\r\n      folderOpenOutline\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      //puzzle size\r\n      tiles: [],\r\n      puzzleSize: 4,\r\n      cols: 4,\r\n      rows: 4,\r\n      openPos: null,\r\n      contextList: [],\r\n\r\n      //image size\r\n      containerSize: 500,\r\n      imageMinSize: 0,\r\n      imageStartX: 0,\r\n      imageStartY: 0,\r\n\r\n      //tile canvas----------\r\n      tileCanvasList: {},\r\n      image: null,\r\n      blob: null,\r\n      src: \"https://ttop32.github.io/VideoSlidePuzzle/public/assets/img/Bokeh%20-%2055859.mp4\",\r\n      lastRender: -1,\r\n      canvasRAFID: null,\r\n      bufferCanvas: null,\r\n      bufferCanvasContext:null,\r\n      backgroundCanvas:null,\r\n      backgroundCtx:null,\r\n\r\n      //timer--------\r\n      timerTime: \"00:00:00\",\r\n      timerRAFID: null,\r\n      startTime: 0,\r\n      runTime: 0,\r\n\r\n\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    tileWidthPercent() {\r\n      return 100 / this.cols;\r\n    },\r\n    tileHeightPercent() {\r\n      return 100 / this.rows;\r\n    },\r\n    imageTileWidth() {\r\n      return Math.floor(this.imageMinSize / this.cols);\r\n    },\r\n    imageTileHeight() {\r\n      return Math.floor(this.imageMinSize / this.rows);\r\n    },\r\n    tileWidth() {\r\n      return Math.floor(this.imageMinSize / this.cols);\r\n    },\r\n    tileHeight() {\r\n      return Math.floor(this.imageMinSize / this.rows);\r\n    },\r\n    isImage() {\r\n      if (this.blob != null) {\r\n        if (/^image/.test(this.blob.type)) {\r\n          return true;\r\n        } else if (/^video/.test(this.blob.type)) {\r\n          return false;\r\n        }\r\n      }\r\n      return /\\.(jpe?g|png|webm|gif)$/i.test(this.src);\r\n    },\r\n  },\r\n\r\n\r\n\r\n  //action =====================================================================\r\n  beforeMount() {\r\n    this.getRandomImg();\r\n    this.setTile();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.handleResize();\r\n\r\n    //set bufferCanvas\r\n    if(!this.bufferCanvas){\r\n      this.bufferCanvas = document.createElement(\"canvas\");\r\n      this.bufferCanvasContext = this.bufferCanvas.getContext(\"2d\", { alpha: false });\r\n      this.bufferCanvasContext.imageSmoothingEnabled= false;\r\n    }\r\n  },\r\n  unmounted() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n    this.terminateVideo();\r\n  },\r\n\r\n  methods: {\r\n    getRandomImg() {\r\n      // const fileList = [\r\n      //   \"Bokeh - 55859.mp4\",\r\n      //   \"Mountain - 65953.mp4\",\r\n      //   \"Waves - 61950.mp4\",\r\n      // ];\r\n      // this.src = \"../assets/img/\" + shuffle.pick(fileList); //get random item\r\n      const fileList = [\r\n        \"https://ttop32.github.io/VideoSlidePuzzle/public/assets/img/Bokeh%20-%2055859.mp4\",\r\n        \"https://ttop32.github.io/VideoSlidePuzzle/public/assets/img/Mountain%20-%2065953.mp4\",\r\n        \"https://github.com/ttop32/VideoSlidePuzzle/blob/main/public/assets/img/Waves%20-%2061950.mp4\",\r\n      ];\r\n      this.src = shuffle.pick(fileList); //get random item\r\n    },\r\n    //puzzle init===========================================================================\r\n    setTile() {\r\n      this.tiles = Array.from(range(this.cols * this.rows)).map((el, index) => {\r\n        return {\r\n          index: index,\r\n          position: index\r\n        };\r\n      });\r\n      this.openPos = this.cols * this.rows - 1;\r\n\r\n\r\n      this.stopTimer();\r\n      this.resetTimer();\r\n    },\r\n\r\n    //puzzle image load===========================================================================\r\n    onMediaLoad() {\r\n      this.$nextTick(() => {\r\n        this.terminateVideo();\r\n        this.image = this.$refs.sourceImg;\r\n\r\n        if (this.isImage) {\r\n          this.onImgLoad();\r\n        } else {\r\n          this.onVideoLoad();\r\n        }\r\n      });\r\n    },\r\n    onVideoLoad() {\r\n      this.initCanvas(this.image.videoWidth, this.image.videoHeight);\r\n      const loop = () => {\r\n        this.imageToCanvas();\r\n        this.canvasRAFID =requestAnimationFrame(loop);\r\n      };\r\n      this.canvasRAFID =requestAnimationFrame(loop);\r\n    },\r\n    terminateVideo() {\r\n      cancelAnimationFrame(this.canvasRAFID);\r\n    },\r\n    onImgLoad() {\r\n      this.initCanvas(this.image.naturalWidth, this.image.naturalHeight);\r\n      this.imageToCanvas();\r\n    },\r\n    imageToCanvas() {\r\n      //imageToBuffer\r\n      this.bufferCanvasContext.drawImage(this.image,0,0);\r\n      //bufferToTile\r\n      this.contextList.forEach((context, index) => {\r\n        context.drawImage(\r\n          this.bufferCanvas,\r\n          this.imageStartX + this.getBackgroundPositionList[index].x,\r\n          this.imageStartY + this.getBackgroundPositionList[index].y,\r\n          this.imageTileWidth,\r\n          this.imageTileHeight,\r\n          0,\r\n          0,\r\n          this.tileWidth,\r\n          this.tileHeight,\r\n        )\r\n      });\r\n      //bufferToBackground\r\n      this.backgroundCtx.drawImage(this.bufferCanvas, 0, 0, this.imageWidth, this.imageHeight, 0, 0, 100, 100);\r\n    },\r\n    initCanvas(imageWidth, imageHeight) {\r\n      //calculate center start pos for tile\r\n      this.imageWidth = imageWidth;\r\n      this.imageHeight = imageHeight;\r\n      this.imageMinSize = Math.min(this.imageWidth, this.imageHeight);\r\n      this.imageStartX = Math.floor((this.imageWidth - this.imageMinSize) / 2);\r\n      this.imageStartY = Math.floor((this.imageHeight - this.imageMinSize) / 2);\r\n\r\n      //set buffer width height\r\n      this.bufferCanvas.width = this.imageWidth;\r\n      this.bufferCanvas.height = this.imageHeight;\r\n      //get tile context list and get tile position list\r\n      this.contextList= [];\r\n      this.getBackgroundPositionList=[];\r\n      Object.entries(this.tileCanvasList).forEach(([index, canvas]) => {\r\n        const con =canvas.getContext(\"2d\", { alpha: false })\r\n        con.imageSmoothingEnabled= false;\r\n        this.contextList.push(con);\r\n\r\n        this.getBackgroundPositionList.push(this.getBackgroundPosition(index));\r\n      });\r\n      //background size\r\n      if(!this.backgroundCanvas ){\r\n        this.backgroundCanvas = this.$refs.background;\r\n        this.backgroundCanvas.width = 100;\r\n        this.backgroundCanvas.height = 100;\r\n        this.backgroundCtx = this.backgroundCanvas.getContext(\"2d\", { alpha: false });\r\n        this.backgroundCtx.filter = 'blur(3px) brightness(0.5)';\r\n      }\r\n    },\r\n    posToCoor(index) {\r\n      return {\r\n        x: index % this.cols,\r\n        y: Math.floor(index / this.cols)\r\n      };\r\n    },\r\n    getBackgroundPosition(index) {\r\n      const coords = this.posToCoor(index);\r\n      return {\r\n        x: coords.x * this.imageTileWidth,\r\n        y: coords.y * this.imageTileHeight\r\n      };\r\n    },\r\n\r\n\r\n    //puzzle move===========================================================================\r\n    move(position) {\r\n      const isSameRow = this.posToCoor(position).y == this.posToCoor(this.openPos).y;\r\n      const isSameCol = this.posToCoor(position).x == this.posToCoor(this.openPos).x;\r\n\r\n      if (isSameRow || isSameCol) {\r\n        let inc = this.openPos < position ? 1 : -1;\r\n        inc = isSameRow ? inc : inc * this.cols;\r\n\r\n        //for each between openPos and selectedPos\r\n        //swap in script array var\r\n        //swap in screen\r\n        range(this.openPos, position, inc).forEach((i) => {\r\n          [this.tiles[i].position, this.tiles[i + inc].position] = [this.tiles[i + inc].position, this.tiles[i].position];\r\n          [this.tiles[i], this.tiles[i + inc]] = [this.tiles[i + inc], this.tiles[i]];\r\n        });\r\n\r\n        //make blank space on selected position\r\n        this.openPos = position;\r\n\r\n        //check puzzle solved\r\n        if (this.checkSolved() == true) {\r\n          this.stopTimer();\r\n        }\r\n      }\r\n    },\r\n    checkSolved() {\r\n      for (const value of this.tiles) {\r\n        if (value.index != value.position) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    randomSlide(iterations) {\r\n      let possibleShuffleList;\r\n      //shuffle row ones and cols ones, repeat\r\n      range(iterations).forEach((i) => {\r\n        if (i % 2 == 0) { //possible row shuffle list\r\n          possibleShuffleList = Array.from(range(\r\n            this.openPos % this.cols,\r\n            this.cols * this.rows,\r\n            this.cols\r\n          ));\r\n        } else { //possible width shuffle list\r\n          possibleShuffleList = Array.from(range(\r\n            this.posToCoor(this.openPos).y * this.cols,\r\n            (this.posToCoor(this.openPos).y + 1) * this.cols));\r\n        }\r\n\r\n        //move random pos\r\n        possibleShuffleList = possibleShuffleList.filter((e, i) => i !== this.openPos)\r\n        const randomPos = shuffle.pick(possibleShuffleList);\r\n        this.move(randomPos);\r\n      });\r\n      this.restartTimer();\r\n    },\r\n\r\n\r\n    //input handle============================================================================================\r\n    changeSizeUsingDate(event) {\r\n      const size = new Date(event.detail.value).getYear();\r\n      this.puzzleSize = size;\r\n      this.cols = this.puzzleSize;\r\n      this.rows = this.puzzleSize;\r\n      this.setTile();\r\n      this.onMediaLoad();\r\n    },\r\n    handleResize() {\r\n      const minSize = Math.min(window.innerWidth, window.innerHeight - 56); //toolbar_size=56\r\n      this.containerSize = minSize;\r\n    },\r\n    loadFile(event) {\r\n      this.setTile();\r\n      if (this.blob) {\r\n        URL.revokeObjectURL(this.blob);\r\n      }\r\n      this.blob = event.target.files[0];\r\n      this.src = URL.createObjectURL(this.blob);\r\n    },\r\n\r\n\r\n    //timer=============================================================\r\n    restartTimer(){\r\n      function padded(value) {\r\n        return String(value).padStart(2, \"0\");\r\n      }\r\n\r\n      this.startTime = performance.now();\r\n\r\n      if(!this.timerRAFID){\r\n        const loop = () => {\r\n          this.runTime = performance.now() - this.startTime;\r\n          const remain = Math.floor(this.runTime / 10) % 100;\r\n          const sec = Math.floor(this.runTime / 1000) % 60;\r\n          const min = Math.floor(this.runTime / 1000 / 60);\r\n          this.timerTime = padded(min) + \":\" + padded(sec) + \":\" + padded(remain);\r\n\r\n          this.timerRAFID = requestAnimationFrame(loop);\r\n        };\r\n        this.$nextTick(loop);\r\n      }\r\n    },\r\n    stopTimer() {\r\n      cancelAnimationFrame(this.timerRAFID);\r\n      this.timerRAFID=null;\r\n    },\r\n    resetTimer(){\r\n      this.timerTime=\"00:00:00\";\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#layout {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  overflow:hidden;\r\n}\r\n\r\n.puzzleContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: -1px;\r\n  background: white;\r\n  border: 1px solid white;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, .5);\r\n}\r\n\r\n.tile {\r\n  display: inline-block;\r\n  padding: 1px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.tile .tile_canvas {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  font-size: 2rem;\r\n  color: white;\r\n  filter: brightness(1.00);\r\n  transition: filter 200ms;\r\n  cursor: pointer;\r\n}\r\n\r\n.tile .tile_canvas:hover {\r\n  filter: brightness(0.80);\r\n}\r\n\r\n.controls {\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.slide-move {\r\n  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);  /* transition: all .04s ease; */\r\n}\r\n\r\n/* background ================== */\r\n.sourceImg {\r\n  display: none;\r\n}\r\n\r\n.background {\r\n  pointer-events: none;\r\n  z-index: -1;\r\n  object-fit: cover;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  overflow: hidden;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n\r\n/* header ================== */\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n\r\n.custom-file-upload {\r\n  border: 1px solid #ccc;\r\n  display: inline-block;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}